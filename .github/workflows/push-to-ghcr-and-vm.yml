name: Push to GHCR and Deploy to VM

on:
  push:
    branches:
      - main
      - setup_ci_cd

jobs:
  push-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build Docker image
        run: |
          echo 'building docker image...'
          echo "::error::This is an error message"  # Log an error
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest \
            -f ./docker/DockerfileStaging .
        env:
          DOCKER_BUILDKIT: 1
          EXT_PORT:  ${{ secrets.EXT_PORT }}
          INT_PORT:  ${{ secrets.INT_PORT }}
          DB_URL: ${{ secrets.DB_URL }}

      - name: Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest

      - name: Set up SSH key
        uses: webfactory/ssh-agent@setup_ci_cd
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Pull Docker Image from GHCR and Deploy to VM
        run: |
          # Connect to your AWS VM via SSH
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ubuntu@35.178.122.100 << 'EOF'
            # docker-compose -f compose-staging.yaml pull
            docker-compose -f compose-staging.yaml up -d --build
          EOF